version: '3.8'

networks:
  kafka-network:
    driver: bridge

volumes:
  oracle-data:
  zookeeper-data:
  kafka-data:
  connect-data:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - kafka-network
    ports:
      - "2181:2181"
    restart: always
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-data:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks:
      - kafka-network
    ports:
      - "9092:9092"
      - "19092:19092"
    restart: always
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:19092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka-data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    networks:
      - kafka-network
    ports:
      - "8081:8081"
    restart: always
    depends_on:
      - kafka
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
      
  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    networks:
      - kafka-network
    ports:
      - "8083:8083"
    restart: always
    depends_on:
      - kafka
      - zookeeper
      - schema-registry
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka:9092
      - CONNECT_REST_ADVERTISED_HOST_NAME=kafka-connect
      - CONNECT_GROUP_ID=1
      - CONNECT_CONFIG_STORAGE_TOPIC=avro-connect-configs
      - CONNECT_OFFSET_STORAGE_TOPIC=avro-connect-offsets
      - CONNECT_STATUS_STORAGE_TOPIC=avro-connect-status
      - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONNECT_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONNECT_PLUGIN_PATH=/usr/share/java,/usr/share/confluent-hub-components
    volumes:
      - connect-data:/var/lib/kafka-connect/data
      - D:/workspace/kafka/kafka-plugins:/usr/share/confluent-hub-components
      - ./connectors:/connectors

    command:
      - bash
      - -c
      - "/etc/confluent/docker/run & /connectors/init-connector.sh && wait"

  # oracle:
  #   image: container-registry.oracle.com/database/express:21.3.0-xe
  #   container_name: oracle
  #   networks:
  #     - kafka-network
  #   ports:
  #     - "1521:1521"
  #   restart: always
  #   environment:
  #     - ORACLE_PWD=Abc12345
  #   volumes:
  #     - oracle-data:/opt/oracle/oradata
  #     - ./init-oracle.sql:/docker-entrypoint-initdb.d/init-oracle.sql
  #     - ./entrypoint.sh:/entrypoint.sh
  #   entrypoint: ["/bin/bash", "/entrypoint.sh"]
  #   shm_size: '4g'