version: '3.8'

networks:
  kafka-network:
    driver: bridge

volumes:
  oracle-data:
  zookeeper-data:
  kafka-data:
  connect-data:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - kafka-network
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-data:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks:
      - kafka-network
    ports:
      - "9092:9092"
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://192.168.1.199:19092  # Thay đổi địa chỉ IP này thành IP của máy chủ Kafka
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_LOG_RETENTION_MS=86400000        # Thêm: 24 giờ
      - KAFKA_LOG_CLEANUP_POLICY=delete        # Thêm: Xóa dữ liệu cũ
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-connect:
    image: debezium/connect:3.0.0.Final
    container_name: kafka-connect
    healthcheck:  
      test: ["CMD-SHELL", "curl -sf http://localhost:8083/connectors || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - kafka-network
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - zookeeper
    environment:
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my-connect-configs
      - OFFSET_STORAGE_TOPIC=my-connect-offsets
      - STATUS_STORAGE_TOPIC=my-connect-status
      - BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - connect-data:/kafka/connect

  kafka-connect-init:
    image: curlimages/curl
    container_name: kafka-connect-init
    networks:
      - kafka-network
    depends_on:
      kafka-connect:
        condition: service_healthy
    # restart: on-failure 
    volumes:
      - ./connectors:/connectors
    command: >
      sh -c "
        echo 'Waiting for Kafka Connect...';
        timeout 300 bash -c '
          until curl -sf http://kafka-connect:8083; do
            sleep 5;
          done
        ';
        for connector in oracle-connector postgres-connector; do
          if [ -f \"/connectors/\$$connector.json\" ]; then
            echo 'Starting create connector...';
            curl -X POST -H 'Content-Type: application/json' \\
              --data @/connectors/\$$connector.json \\
              http://kafka-connect:8083/connectors;
          else
            echo \"WARN: \$$connector.json not found\";
          fi;
        done;
        
        tail -f /dev/null
      "
  topic-creator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: topic-creator
    networks:
      - kafka-network
    depends_on:
      kafka-connect:
        condition: service_healthy
    # volumes:
    #   - ./create_topics.py:/create_topics.py
    #   - ./requirements.txt:/requirements.txt
    # command: >
    #   bash -c "pip install -r /requirements.txt && python /create_topics.py"

  # oracle:
  #   image: container-registry.oracle.com/database/express:21.3.0-xe
  #   container_name: oracle
  #   networks:
  #     - kafka-network
  #   ports:
  #     - "1521:1521"
  #   environment:
  #     - ORACLE_PWD=Abc12345
  #   volumes:
  #     - oracle-data:/opt/oracle/oradata
  #   shm_size: '4g'  # Oracle yêu cầu bộ nhớ dùng chung lớn hơn mặc định